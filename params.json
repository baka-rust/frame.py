{"name":"frame.py","tagline":"python webapp framework with wsgi","body":"# frame.py\r\nframe.py is a web application framework for Python a la Django and web.py. It's nothing new, but gets things done the way I like them done.\r\nIt uses a regex driven URL to function mapping, and wsgi for server communication.\r\n\r\n## example with decorators\r\n```python\r\nfrom frame import Frame, Response, Http404\r\n\r\n# initiate a Frame object\r\napp = Frame()\r\n\r\n# define a function to respond to a url, with its pattern in the decorator\r\n@app.route(\"^/count/([1-9]*)$\")\r\ndef count(request):\r\n\tif request.type == \"GET\":\r\n\t\treturn Response(\"you entered \" + str(request.matchObject.group(1)))\r\n\telse:\r\n\t\traise Http404\r\n\r\n# run the test server\r\napp.testServer(80)\r\n```\r\n\r\n## example with pattern list\r\n```python\r\nfrom frame import Frame, Response, Http404\r\n\r\n# define a function to respond to a url\r\ndef count(request):\r\n\tif request.type == \"GET\":\r\n\t\treturn Response(\"you entered \" + str(request.matchObject.group(1)))\r\n\telse:\r\n\t\traise Http404\r\n\r\n# define a pattern to map to that function\t\r\nurlPatterns = [\r\n\t(\"^/count/([1-9]*)$\", count),\r\n]\r\n\r\n# initiate a Frame object and run the test server\r\napp = Frame(urlPatterns)\r\napp.testServer(80)\r\n```\r\n\r\n## deploying with google app engine\r\nBecause frame.py uses WSGI, it is quite easy to set it up with the Google App Engine.\r\nSimply create a new file in your project directory called *wsgi.py* or something to that effect. Inside, include:\r\n```python\r\n# make sure {frameApp} actually matches the name of your application\r\nfrom frameApp import app\r\napplication = app.application\r\n```\r\nThen, modify your *app.yaml* to include:\r\n```yaml\r\nhandlers:\r\n- url: .*\r\n  script: wsgi.application\r\n```\r\nIf you would like to have app engine handle static files (recommended), modify your *app.yaml* to include (before the script handler):\r\n```yaml\r\nhandlers:\r\n- url: /static\r\n  static_dir: static\r\n```\r\nAnd then change your frame.py application initialization to not serve static files.\r\n```python\r\napp = Frame(staticDir=None)\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}